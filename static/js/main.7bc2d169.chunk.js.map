{"version":3,"sources":["Logo.png","components/NavbarTop.js","components/PokemonList.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarTop","currentPageURL","setCurrentPageURL","inputText","setInputText","filter","setFilter","handleFilter","Navbar","bg","expand","id","src","logo","Toggle","Collapse","Nav","className","style","maxHeight","navbarScroll","Form","Select","onChange","e","target","value","news","concat","FormControl","type","placeholder","Button","variant","onClick","preventDefault","PokemonList","pokemonsURL","useState","pokemons","setPokemons","useEffect","componentDidMount","requests","map","n","push","axios","get","Promise","all","then","arrayWithData","Row","xs","md","p","Col","Card","data","types","name","border","Img","sprites","other","dream_world","front_default","Header","Title","string","charAt","toUpperCase","slice","Pagination","goToNextPage","goToPrevPage","App","setPokemonsURL","prevPageURL","setPrevPageURL","nextPageURL","setNextPageURL","loading","setLoading","res","next","previous","results","url","why","pokemon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,MAA0B,iC,+BC8F1BA,MA/Ef,gBAAoBC,EAApB,EAAoBA,eAAeC,EAAnC,EAAmCA,kBAAkBC,EAArD,EAAqDA,UAAUC,EAA/D,EAA+DA,aAAaC,EAA5E,EAA4EA,OAAQC,EAApF,EAAoFA,UAApF,SAA+FC,aAyBvF,eAACC,EAAA,EAAD,CAAQC,GAAG,SAASC,OAAO,KAAKC,GAAG,WAAnC,UACI,qBAAKA,GAAG,OAAMC,IAAKC,IACnB,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,iBAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiBJ,GAAG,eAApB,UACI,cAACK,EAAA,EAAD,CACIC,UAAU,4BACVC,MAAO,CAAEC,UAAW,SACpBC,cAAY,EAHhB,SAMI,eAACC,EAAA,EAAKC,OAAN,CAAaC,SAnB7B,SAAsBC,GAClBlB,EAAUkB,EAAEC,OAAOC,OACnB,IAAIC,EAAO,iCAAiCC,OAAO,IAAKJ,EAAEC,OAAOC,OACjExB,EAAkByB,IAgB+BD,MAAOrB,EAA5C,UACI,wBAAQqB,MAAM,MAAd,iBACC,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,0BAIT,eAACL,EAAA,EAAD,CAAMJ,UAAU,SAAhB,UACI,cAACY,EAAA,EAAD,CACIC,KAAK,SACLC,YAAY,qBACZd,UAAU,iBACV,aAAW,SACXS,MAAOvB,EACPoB,SA/DpB,SAA0BC,GACtBpB,EAAaoB,EAAEC,OAAOC,UAiEV,cAACM,EAAA,EAAD,CAAQf,UAAU,YAAYgB,QAAQ,UAAUC,QA5DhE,SAAsBV,GAClBA,EAAEW,iBACF,IAAIR,EAAO1B,EAAe2B,OAAO,IAAIzB,GACrCD,EAAkByB,GAClBvB,EAAa,KAwDD,8B,wBCnCLgC,MA1Cf,YAAoC,IAAdC,EAAa,EAAbA,YAElB,EAA+BC,mBAAS,IAAxC,mBAAMC,EAAN,KAAgBC,EAAhB,KAEEC,qBAAU,WACRC,MACC,CAACH,IAEN,IAAMG,EAAoB,WACtB,IAAMC,EAAW,GACjBN,EAAYO,KAAI,SAAAC,GAAC,OAAGF,EAASG,KAEzBC,IAAMC,IAAIH,OAEVI,QAAQC,IAAIP,GAAUQ,MAAK,SAACC,GAExBZ,EAAYY,OAQxB,OACI,qBAAKzC,GAAG,UAAR,SACI,cAAC0C,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGtC,UAAU,MAA7B,SACKsB,EAASK,KAAI,SAAAY,GAAC,OACX,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAMjD,GAAI+C,EAAEG,KAAKC,MAAM,GAAG9B,KAAK+B,KAAMC,OAA2B,MAAnBN,EAAEG,KAAKC,MAAM,GAAaJ,EAAEG,KAAKC,MAAM,GAAG9B,KAAK+B,KAAOL,EAAEG,KAAKC,MAAM,GAAG9B,KAAK+B,KAAxH,UACI,cAACH,EAAA,EAAKK,IAAN,CAAUpD,GAAG,eAAesB,QAAQ,MAAMrB,IAAK4C,EAAEG,KAAKK,QAAQC,MAAMC,YAAYC,gBAChF,eAACT,EAAA,EAAKU,OAAN,CAAanD,UAAU,cAAvB,cAAwCuC,EAAEG,KAAKhD,MAC/C,cAAC+C,EAAA,EAAKW,MAAN,CAAapD,UAAU,cAAvB,UAZqBqD,EAYuCd,EAAEG,KAAKE,KAXpES,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,WADvD,IAA+BH,UCtB9B,SAASI,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAC9C,OACI,qBAAKjE,GAAG,YAAR,SACC,eAAC0C,EAAA,EAAD,WACG,cAACI,EAAA,EAAD,UACEmB,GAAgB,cAAC5C,EAAA,EAAD,CAAQC,QAAQ,SAAStB,GAAG,aAAauB,QAAU0C,EAAnD,wBAElB,cAACnB,EAAA,EAAD,UACEkB,GAAgB,cAAC3C,EAAA,EAAD,CAAQC,QAAQ,SAAStB,GAAG,aAAauB,QAAUyC,EAAnD,yBCsDfE,MA1Df,WAEE,MAAqCvC,mBAAS,IAA9C,mBAAMD,EAAN,KAAmByC,EAAnB,KACA,EAAqCxC,qBAArC,mBAAMyC,EAAN,KAAmBC,EAAnB,KACA,EAAqC1C,qBAArC,mBAAM2C,EAAN,KAAmBC,EAAnB,KACA,EAA2C5C,mBAAS,qCAApD,mBAAMrC,EAAN,KAAsBC,EAAtB,KACA,EAA6BoC,oBAAS,GAAtC,mBAAM6C,EAAN,KAAeC,EAAf,KACA,EAAiC9C,mBAAS,IAA1C,mBAAMnC,EAAN,KAAiBC,EAAjB,KACA,EAA0BkC,mBAAS,OAAnC,mBAAMjC,EAAN,KAAaC,EAAb,KA6BA,OA3BAmC,qBAAU,WACR2C,GAAW,GACG,OAAV/E,EACJ0C,IAAMC,IAAI/C,GAAgBkD,MAAK,SAAAkC,GAC7BD,GAAW,GACXF,EAAeG,EAAI1B,KAAK2B,MACxBN,EAAeK,EAAI1B,KAAK4B,UACxBT,EAAeO,EAAI1B,KAAK6B,QAAQ5C,KAAI,SAAAY,GAAC,OAAEA,EAAEiC,WAEzC1C,IAAMC,IAAI/C,GAAgBkD,MAAK,SAAAkC,GAC7BD,GAAW,GACX,IAAMM,EAAM,GACZL,EAAI1B,KAAKgC,QAAQ/C,KAAI,SAAAY,GAAC,OAAGkC,EAAI5C,KAAKU,EAAEmC,YACpCT,EAAe,IACfF,EAAe,IACfF,EAAeY,EAAI9C,KAAI,SAAAY,GAAC,OAAEA,EAAEiC,aAE/B,CAACxF,IAUAkF,EAAgB,aAGlB,sBAAKlE,UAAU,MAAf,UACE,cAAC,EAAD,CACAhB,eAAkBA,EAClBC,kBAAqBA,EACrBC,UAAWA,EACXC,aAAcA,EACdC,OAAQA,EACRC,UAAWA,IACX,cAAC,EAAD,CACA+B,YAAeA,IACf,cAACqC,EAAD,CACEC,aAAgBM,EAtBtB,WACE/E,EAAkB+E,IAqB+B,KAC7CL,aAAgBG,EAnBtB,WACE7E,EAAkB6E,IAkB8B,WCjDrCa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7bc2d169.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.684b4db9.png\";","import InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form } from 'react-bootstrap';\r\nimport logo from '../Logo.png'; // with import\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nfunction NavbarTop({currentPageURL,setCurrentPageURL,inputText,setInputText,filter, setFilter, handleFilter}){\r\n\r\n\r\n    function inputTextHandler(e){\r\n        setInputText(e.target.value);\r\n        \r\n    };\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        let news = currentPageURL.concat('/',inputText)\r\n        setCurrentPageURL(news);\r\n        setInputText('')\r\n    };\r\n\r\n    function handleFilter(e){\r\n        setFilter(e.target.value);\r\n        let news = 'https://pokeapi.co/api/v2/type'.concat('/', e.target.value)\r\n        setCurrentPageURL(news);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"danger\" expand=\"lg\" id=\"NavbarId\">\r\n            <img id=\"Logo\"src={logo}/>\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n                <Nav\r\n                    className=\"ms-auto my-2 my-lg-0 mt-4\" \r\n                    style={{ maxHeight: '100px' }}\r\n                    navbarScroll\r\n                >\r\n                    {/* <Nav.Link href=\"#action2\">Link</Nav.Link> */}\r\n                    <Form.Select onChange={handleFilter} value={filter}>\r\n                        <option value=\"All\">All</option>\r\n                         <option value=\"fire\">Fire</option>\r\n                         <option value=\"water\">Water</option>\r\n                         <option value=\"electric\">Electric</option>\r\n                         <option value=\"steel\">Steel</option>\r\n                         <option value=\"fairy\">Fairy</option>\r\n                         <option value=\"ghost\">Ghost</option>\r\n                         <option value=\"dark\">Dark</option>\r\n                         <option value=\"normal\">Normal</option>\r\n                         <option value=\"fighting\">Fighting</option>\r\n                         <option value=\"flying\">Flying</option>\r\n                         <option value=\"rock\">Rock</option>\r\n                         <option value=\"ground\">Ground</option>\r\n                         <option value=\"dragon\">Dragon</option>\r\n                         <option value=\"ice\">Ice</option>\r\n                         <option value=\"psychic\">Psychic</option>\r\n                         <option value=\"grass\">Grass</option>\r\n                         <option value=\"poison\">Poison</option>\r\n                         <option value=\"bug\">Bug</option>\r\n                         <option value=\"unknown\">Unknown</option>\r\n                    </Form.Select>\r\n\r\n                </Nav>\r\n                <Form className=\"d-flex\"  >\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Enter Pokemon Name\"\r\n                        className=\"mr-2 rounded-0\"\r\n                        aria-label=\"Search\"\r\n                        value={inputText}\r\n                        onChange={inputTextHandler}\r\n\r\n                    />\r\n                    <Button className=\"rounded-0\" variant=\"warning\" onClick={handleSubmit}>Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NavbarTop;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nfunction PokemonList({pokemonsURL}){\r\n\r\n    const[pokemons, setPokemons] = useState([]);\r\n    \r\n      useEffect(() =>{\r\n        componentDidMount();\r\n      }, [pokemons]);\r\n    \r\n    const componentDidMount = () => {\r\n        const requests = [];\r\n        pokemonsURL.map(n=> requests.push(\r\n            // fetch(n).then(response => response.json())\r\n            axios.get(n)\r\n        ))\r\n            Promise.all(requests).then((arrayWithData) => {\r\n               \r\n                setPokemons(arrayWithData)\r\n                });\r\n              }\r\n    \r\n              function capitalizeFirstLetter(string) {\r\n                return string.charAt(0).toUpperCase() + string.slice(1);\r\n              }\r\n\r\n    return (\r\n        <div id=\"content\">\r\n            <Row xs={2} md={4} className=\"g-4\">\r\n                {pokemons.map(p => (\r\n                    <Col>\r\n                    <Card bg={p.data.types[0].type.name} border={p.data.types[1] == null ? p.data.types[0].type.name : p.data.types[1].type.name}>\r\n                        <Card.Img id=\"pokemonimage\" variant=\"top\" src={p.data.sprites.other.dream_world.front_default} />\r\n                        <Card.Header className=\"text-center\" >#{p.data.id}</Card.Header>\r\n                        <Card.Title  className=\"text-center\">{capitalizeFirstLetter(p.data.name)}</Card.Title>\r\n                    </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PokemonList;","import React from 'react'\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default function Pagination({goToNextPage, goToPrevPage}) {\r\n    return (\r\n        <div id=\"buttonNav\">\r\n         <Row >\r\n            <Col>\r\n            { goToPrevPage && <Button variant=\"danger\" id=\"buttonPrev\" onClick= {goToPrevPage}>Previous</Button> }\r\n            </Col>\r\n            <Col>\r\n            { goToNextPage && <Button variant=\"danger\" id=\"buttonNext\" onClick= {goToNextPage}>Next</Button>}\r\n            </Col>\r\n       </Row>\r\n       </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport NavbarTop from './components/NavbarTop';\nimport PokemonList from './components/PokemonList';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  \n  const[pokemonsURL, setPokemonsURL] = useState([]); \n  const[prevPageURL, setPrevPageURL] = useState();\n  const[nextPageURL, setNextPageURL] = useState();\n  const[currentPageURL, setCurrentPageURL] = useState('https://pokeapi.co/api/v2/pokemon');\n  const[loading, setLoading] = useState(true);\n  const[inputText, setInputText] = useState(\"\");\n  const[filter,setFilter] = useState(\"All\");\n\n  useEffect(() =>{\n    setLoading(true)\n    if (filter == 'All') {\n    axios.get(currentPageURL).then(res =>{\n      setLoading(false)\n      setNextPageURL(res.data.next)\n      setPrevPageURL(res.data.previous)\n      setPokemonsURL(res.data.results.map(p=>p.url))\n    })} else {\n      axios.get(currentPageURL).then(res =>{\n        setLoading(false)\n        const why = [];\n        res.data.pokemon.map(p=> why.push(p.pokemon))\n        setNextPageURL('')\n        setPrevPageURL('')\n        setPokemonsURL(why.map(p=>p.url))\n    })}\n  }, [currentPageURL]);\n\n  function goToNextPage() {\n    setCurrentPageURL(nextPageURL);\n  }\n\n  function goToPrevPage(){\n    setCurrentPageURL(prevPageURL);\n  }\n\n  if (loading) return 'Loading...'\n  \n  return (\n    <div className=\"App\">\n      <NavbarTop \n      currentPageURL = {currentPageURL} \n      setCurrentPageURL = {setCurrentPageURL}\n      inputText={inputText}\n      setInputText={setInputText} \n      filter={filter}\n      setFilter={setFilter}/>\n      <PokemonList \n      pokemonsURL = {pokemonsURL}/>\n      <Pagination \n        goToNextPage = {nextPageURL ? goToNextPage : null}\n        goToPrevPage = {prevPageURL ? goToPrevPage: null}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/main.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}